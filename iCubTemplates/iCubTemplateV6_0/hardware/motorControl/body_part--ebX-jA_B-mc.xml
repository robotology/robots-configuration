<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE devices PUBLIC "-//YARP//DTD yarprobotinterface 3.0//EN" "http://www.yarp.it/DTD/yarprobotinterfaceV3.0.dtd">

<device xmlns:xi="http://www.w3.org/2001/XInclude" name="body_part-ebX-jA_B-mc" type="embObjMotionControl">
    <xi:include href="../../general.xml"/>
    <xi:include href="../../hardware/electronics/body_part-ebX-jA_B-eln.xml" />
    <xi:include href="../../hardware/mechanicals/body_part-ebX-jA_B-mec.xml" />
    <xi:include href="./body_part-ebX-jA_B-mc_service.xml" /> 

    <group name="LIMITS">
        <param name="jntPosMax">  -10  </param> <!--  Max position of joint (user defined) [expressed in degrees]. It should be minor or equal of hwJntPosMax. See https://icub-tech-iit.github.io/documentation/icub_kinematics/icub-joints-limits/icub-joints-limits/ for more details -->
        <param name="jntPosMin">  10   </param> <!--  Min position of joint (user defined) [expressed in degrees]. It should be minor or equal of hwJntPosMin. See https://icub-tech-iit.github.io/documentation/icub_kinematics/icub-joints-limits/icub-joints-limits/ for more details -->
        <param name="jntVelMax">  10   </param> <!--  Max velocity of joint [expressed in degrees/second].                                                                                                                        -->
        <param name="motorNominalCurrents">   100 </param>  <!-- It is the current which can be kept for an indefinite amount of time without damaging the motor. The 2FOC uses any value beyond
                                                                 this threshold in the computation of i2T. It is expressed in [mA]. In datasheet it is found under the name "continuous stall current".      -->
        <param name="motorPeakCurrents">      100 </param>  <!-- It is the max current that it can be applied to the motor for a short amount of time. The 2FOC saturates to this value and also 
                                                                 use this value for the integration of I2T. It is expressed in [mA]. In datasheet it is found under the name "peak stall current".      -->
        <param name="motorOverloadCurrents">  100  </param> <!-- It is the current which instantaneously damages the motor. It is expressed in [mA]. 
                                                                 However, this value is not used by 2FOC FW. Keep it fixed at 21000.  -->

        <param name="hardwareTemperatureLimits"> 110 </param> <!-- It is the max temperature that the motor linked to this joint can reach. It should be defined from Datasheet
                                                                  The motor should never overcome this temperature. The 2FOC board would use this value to generate a overHeating error if it is overcome
                                                                  It is expressed here in Celsius Degree [℃] and the max suggested value is 110-->
        <param name="warningTemperatureLimits">  90 </param> <!-- It is the warning temperature that the motor linked to this joint can reach. It should be defined from the user depending on the use case
                                                                  The motor could reach this temperature but it is suggested to have working conditions far fromm it.
                                                                  It MUST be set lower than the 85% of the hardwareTemperatureLimit otherwise the embObjMotionControl will raise an error.
                                                                  If overcome the embObjMotionControl will send a warning suggesting to modify working conditions such as reducing the PWM and thus the Currents fed to the motor
                                                                  It is expressed here in Celsius Degree [℃] -->

        <param name="motorPwmLimit">          100  </param> <!-- Limit of max PWM which can be applied to the motor. Max value is 32000. This threshold is used after decoupling.  -->
    </group>

    <group name="TIMEOUTS">
        <param name="velocity"> 10 </param> <!-- timeout on reception of velocity setpoint by firmware. [expressed in millisec] -->
    </group>

    
   <!-- IMPORTANT NOTES about CONTROLS tag: 
        1) CONTROL tag allows the user to save in file different PID configurations and can choose which configuration to use.
           To do this, the user writes one or more sections of PID within the file and indicates the selected PID in the "CONTROLS" group.

        2) positionControl, velocityControl and mixedControl are separated for general purpose but, at present, each joint MUST has the same PID configuration for position, velocity and mixed control.
        
        3) currentPid and speddPid are used only if 2FOC boards are present. 
    -->

    <group name="CONTROLS">
        <!-- For each control type, set the user name tag for each joints managed by this board.
             The tag name MUST be defined below.
        -->
        <param name="positionControl"> user_name_tag_of_position_control       </param> <!--  EXAMPLE: MY_POS_CTRL_OUT_PWM, MY_POS_CTRL_OUT_CURRENT, MY_POS_CTRL_OUT_VEL -->
        <param name="velocityControl"> user_name_tag_of_position_control       </param> <!-- If joint can't perform velocity control, use "none", else use user_name_tag_of_position_control as explained above.-->
        <param name="mixedControl">    user_name_tag_of_position_control       </param> <!-- If joint can't perform mixed control, use "none". EXAMPLE: MY_POS_CTRL_OUT_PWM, MY_POS_CTRL_OUT_CURRENT, MY_POS_CTRL_OUT_VEL -->
        
        <param name="torqueControl">   user_name_tag_of_torque_control          </param> <!--  If joint can't perform torque control, use "none". EXAMPLE: MY_TRQ_CONTROL                     -->
        <param name="currentPid">      user_name_tag_of_current_control         </param> <!-- If joint can't perform current control, use "none". In case of EMS+2FOC it has to be defined, otherwise in case of MC4+ set as none EXAMPLE: MY_CUR_CONTROL;  -->
        <param name="speedPid">        user_name_tag_of_low-level_speed_control </param> <!-- If joint can't perform low-level speed control, use "none". In case of EMS+2FOC it has to be defined, otherwise in case of MC4+ set as none. EXAMPLE: MY_SPEED_CONTROL -->
    </group>
    
    <!-- WARNING: in updating files do not change control unit types (outputControlUnits, fbkControlUnits) -->
    <!-- without proper conversions -->
    <group name="MY_POS_CTRL_OUT_PWM">                                    
        <param name="controlLaw">          minjerk </param> <!-- Specifies that trajectories will be generated by a minimum jerk algorithm. This is the only one available -->
        <param name="outputType">          pwm     </param> <!-- Specifies the motor control reference type "pwm". --> 
        <param name="fbkControlUnits">     metric_units   </param> <!-- metric_units  or machine_units(raw values). Recommended value: metric_units -->
        <param name="outputControlUnits">  machine_units  </param> <!-- dutycycle_percent  or machine_units(raw values). Recommended value: dutycycle_percent -->        
        <param name="kp">           0  </param> <!-- Proportional constant in PID control. [expressed in pwm_raw/degrees (metric_units) or pwm_raw/encoder (machine_units)] -->
        <param name="kd">           0  </param> <!-- Derivative constant in PID control. [expressed in pwm_raw/(degrees/sec) (metric_units) or pwm_raw/(encoder/sec) (machine_units)] -->
        <param name="ki">           0  </param> <!-- Integral constant in PID control. [expressed in pwm_raw/(degrees*sec) (metric_units) or pwm_raw/(encoder*sec) (machine_units)]  -->
        <param name="maxOutput">    0  </param> <!-- Limit on PID output [expressed in PWM raw units] -->
        <param name="maxInt">       0  </param> <!-- Anti-windup limit on PID integral part [expressed in PWM raw units] -->
        <param name="stictionUp">   0  </param> <!-- Not used at present -->
        <param name="stictionDwn">  0  </param> <!-- Not used at present -->
        <param name="kff">          0  </param> <!-- Feed forward term constant. The output is proportional to reference. [expressed in pwm_raw/degrees (metric_units) or pwm_raw/encoder (machine_units)] -->
    </group>
    
    <!-- WARNING: in updating files do not change control unit types (outputControlUnits, fbkControlUnits)
                  without proper conversions 
    -->
    <group name="MY_POS_CTRL_OUT_CURRENT">                                    
        <param name="controlLaw">          minjerk </param> <!-- Specifies that trajectories will be generated by a minimum jerk algorithm. This is the only one available -->
        <param name="outputType">          current </param> <!-- Specifies the motor control reference type "current". --> 
        <param name="fbkControlUnits">     metric_units   </param> <!-- metric_units  or machine_units(raw values). Recommended value: metric_units -->
        <param name="outputControlUnits">  machine_units  </param> <!-- dutycycle_percent  or machine_units(raw values). Recommended value: dutycycle_percent -->        
        <param name="kp">           0  </param> <!-- Proportional constant in PID control. [expressed in mA/degrees (metric_units) or mAencoder (machine_units)] -->
        <param name="kd">           0  </param> <!-- Derivative constant in PID control. [expressed in mA/(degrees/sec) (metric_units) or mA/(encoder/sec) (machine_units)] -->
        <param name="ki">           0  </param> <!-- Integral constant in PID control. [expressed in mA/(degrees*sec) (metric_units) or mA/(encoder*sec) (machine_units)]  -->
        <param name="maxOutput">    0  </param> <!-- Limit on PID output [expressed in mA units] -->
        <param name="maxInt">       0  </param> <!-- Anti-windup limit on PID integral part [expressed in mA units] -->
        <param name="stictionUp">   0  </param> <!-- Not used at present -->
        <param name="stictionDwn">  0  </param> <!-- Not used at present -->
        <param name="kff">          0  </param> <!-- Feed forward term constant. The output is proportional to reference. [expressed in mA/degrees (metric_units) or pwm_raw/encoder (machine_units)] -->
    </group>
    
    <group name="MY_POS_CTRL_OUT_VEL">                                    
        <param name="controlLaw">          minjerk   </param> <!-- Specifies that trajectories will be generated by a minimum jerk algorithm. This is the only one available-->
        <param name="outputType">          velocity  </param> <!-- Specifies the motor control reference type "velocity". --> 
        <param name="fbkControlUnits">     machine_units  </param> <!-- machine_units (basically the control loop is demanded to lower control level) -->
        <param name="outputControlUnits">  machine_units  </param> <!-- machine_units (basically the control loop is demanded to lower control level)-->        
        <param name="kp">           5  </param> <!-- Proportional constant. [expressed in 1/sec]. 5 is a typical value. -->
        <param name="kd">           0  </param> <!-- Derivative constant in PID control. [expressed in pwm_raw/(degrees/sec) (metric_units) or pwm_raw/(encoder/sec) (machine_units)] -->
        <param name="ki">           0  </param> <!-- Not used at present  -->
        <param name="maxOutput">    0  </param> <!-- Limit on output [expressed in icubdegrees/msec] -->
        <param name="maxInt">       0  </param> <!-- Not used at present -->
        <param name="kff">          1  </param> <!-- Adimensional, tipically equal to 1 -->
    </group>
    

    <group name="MY_TRQ_CTRL_OUT_PWM">
        <param name="controlLaw">          torque        </param> <!-- Specifies torque control. This is the only one available -->
        <param name="outputType">          pwm           </param> <!-- Specifies the motor control reference type "pwm". --> 
        <param name="fbkControlUnits">     metric_units  </param> <!-- metric_units  or machine_units(raw values). Recommended value: metric_units -->
        <param name="outputControlUnits">  machine_units </param> <!-- dutycycle_percent  or machine_units(raw values). Recommended value: dutycycle_percent -->
        <param name="kp">           0   </param>   <!-- Proportional part of the PID control loop [expressed in pwm_raw/Nm]                                  -->
        <param name="kd">           0   </param>   <!-- Derivative part of the PID control loop [expressed in pwm_raw/(Nm/sec)]                              -->
        <param name="ki">           0   </param>   <!-- Integral part of the PID control loop [expressed in pwm_raw/(Nm*sec)]                                -->
        <param name="maxOutput">    0   </param>   <!-- Limit on PID output [expressed in PWM raw units]                                                     -->
        <param name="maxInt">       0   </param>   <!-- Anti-windup limit on PID integral part [expressed in PWM raw units]                                  -->
        <param name="ko">           0   </param>   <!-- Openloop output [expressed in PWM raw units]                                -->
        <param name="stictionUp">   0   </param>   <!-- Not used at present.                                                        -->
        <param name="stictionDown"> 0   </param>   <!-- Not used at present.                                                        -->
        <param name="kff">          0   </param>   <!-- Feed forward torque part [expressed in pwm_raw/Nm]                          -->
        <param name="velocityThres">0   </param>   <!-- Velocity threshold for friction compensation [expressed in icubdegrees/sec] -->
        <param name="viscousPos">   0   </param>   <!-- Viscous constant used for friction (positive direction )                    -->
        <param name="viscousNeg">   0   </param>   <!-- Viscous constant used for friction (negative direction )                    -->
        <param name="coulombPos">   0   </param>   <!-- Coulomb constant used for friction (positive direction )                    -->
        <param name="coulombNeg">   0   </param>   <!-- Coulomb constant used for friction (negative direction )                    -->
        <param name="filterType">   0   </param>   <!-- Low pass filter on output 0=no filter 1=3 HZ 2=1.1 Hz 3=0.8 Hz 4=0.5 Hz     -->
        <param name="ktau">         0   </param>   <!-- Gain on Kff part [adimensional]                      -->
     </group>                                      

    <group name="IMPEDANCE">
        <param name="stiffness">   1   </param> <!-- stiffness values. If torque control pid has metric_units, measurament units is [Nm/degree]  else raw value  -->
        <param name="damping">     1   </param> <!-- damping values. If torque control pid has metric_units, measurament units is [Nm/(degree/sec)]  else raw value -->
    </group>

    <!--MY_CUR_CONTROL and MY_SPEED_CONTROL control groups have to be used only with 2FOC boards -->
    <group name="MY_CUR_CONTROL">
        <param name="controlLaw">          low_lev_current </param> <!-- fixed value. This is the only one available  -->
        <param name="fbkControlUnits">     machine_units   </param> <!-- fixed value -->
        <param name="outputControlUnits">  machine_units   </param> <!-- fixed value -->
        <param name="kp">              0 </param> <!-- Current control loop proportional part [expressed in pwm_raw/mA] -->
        <param name="kd">              0 </param> <!-- Current control loop derivative part [expressed in pwm_raw/(mA/sec)] -->
        <param name="ki">              0 </param> <!-- Current control loop integral part [expressed in pwm_raw/(mA*sec)] -->
        <param name="shift">           0 </param> <!-- right shift of kp, kd and ki parameters  -->
        <param name="maxOutput">       0 </param> <!-- Limit on PID output [expressed in PWM raw units]  -->
        <param name="maxInt">          0 </param> <!-- Anti-windup limit on PID integral part [expressed in PWM raw units] -->
        <param name="kff">             0 </param> <!-- Not used. -->
    </group>                                                                            
                                                                                       
    <group name="MY_SPEED_CONTROL">                                                     
        <param name="controlLaw">          low_lev_speed </param> <!-- fixed value.This is the only one available  -->
        <param name="fbkControlUnits">     machine_units </param> <!-- fixed value -->
        <param name="outputControlUnits">  machine_units </param> <!-- fixed value -->
        <param name="kp">                  0 </param> <!-- Speed control loop proportional part [expressed in pwm_raw/(icubdegrees/msec)] -->
        <param name="kd">                  0 </param> <!-- Speed control loop derivative part [expressed in pwm_raw/(icubdegrees/msec^2)] -->
        <param name="ki">                  0 </param> <!-- Speed control loop integral part [expressed in pwm_raw/icubdegrees] -->
        <param name="shift">               0 </param> <!-- right shift of kp, kd and ki parameters  -->
        <param name="maxOutput">           0 </param> <!-- Limit on PID output [expressed in PWM raw units]  -->
        <param name="maxInt">              0 </param> <!-- Anti-windup limit on PID integral part [expressed in PWM raw units] -->
        <param name="kff">                 0 </param> <!-- Not used. -->
    </group>
    
    <group name="OTHER_CONTROL_PARAMETERS">
        <param name="deadZone">  </param>  <!-- the maximum precision in reaching the target position. This is an optional parameter, therefore if is not specified the firmware use the following ones: 
                                             - for joints with aea encoder it is  0.0495 degree
                                             - for joints with amo encoder it is  0.0049 degree -->
    </group>



